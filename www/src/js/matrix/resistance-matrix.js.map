{"version":3,"sources":["www/src/js/matrix/resistance-matrix.es2015.js"],"names":["SVGHelper","_supportsCSSTransforms","_browserSupportsCSSTransforms","element","translation","rotation","values","_getTransformationValues","style","transform","setAttribute","attribute","push","x","y","undefined","join","svg","document","createElementNS","content","_browserSupportsSvgInnerHTML","innerHTML","xmlString","doc","DOMParser","parseFromString","imported","ownerDocument","importNode","documentElement","Array","from","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","appendChild","_svgNS","querySelectorAll","length","ResistanceMatrix","container","data","config","Error","_container","_data","_svgHelper","_configuration","spaceBetweenLabelsAndMatrix","transitionDuration","lineWidth","cellColorValue","cellLabelValue","rowIdentifier","rowLabelValue","columnLabelValue","columnHeaderTransformer","item","columnIdentifier","rowDataTransformer","rowHidden","columnHidden","_elements","console","time","_drawMatrix","timeEnd","log","visibleCols","filter","colScale","_createScale","_colScale","offset","_defaultStep","_updateColumnPositionAndVisibility","visibleRows","rowScale","_updateRowPositionsAndVisibility","_rowScale","xPos","yPos","visible","classes","classIndex","classList","remove","Math","abs","add","setTransformation","scale","rowIds","Object","keys","rows","rowId","pos","getPosition","row","_updatePositionAndVisibility","colIds","columns","colId","_createSVG","rowLabelMaxWidth","_getRowLabelMaxWidth","left","_getSvgWidth","step","_createCellCircleDefs","bandwidth","_createColHeads","_createRows","setSVGContent","colHeads","maxLabelHeight","head","max","getBoundingClientRect","width","querySelector","ceil","height","getAttribute","cells","cell","identifier","body","hoveredMatrixCell","mouseOver","_createEmptyMouseOverCell","addEventListener","ev","_mouseOverHandler","_mouseOutHandler","opacity","_degradeHighlightedHeaders","rowHead","hoveredRowHead","colHead","hoveredColumnHead","window","requestAnimationFrame","target","parentNode","contains","error","_updateMouseOverCell","_highlightHeaders","hoveredCell","colIdentifier","textContent","cellDimensions","radius","round","g","pointerEvents","cursor","_createRow","_createRowLabel","maxWidth","removeChild","identifierFunction","positions","floor","index","value","indentation","transformation","replace","transformer","valueFunction","rowIdentifierFunction","colorValue","labelValue","rowData","label","_createCellsForRow","columnIdentifierFunction","cellDatum","textFunction","heads","_createColHead","dimensions","roundedRadius","infect"],"mappings":";;;;;;AAAA,CAAC,YAAM;;AAEN;;AAEA;;;;;;;;AAQA;;;;;;;AAZM,KAmBAA,SAnBA;AAqBL,uBAAc;AAAA;;AAEb,QAAKC,sBAAL,GAA8B,KAAKC,6BAAL,EAA9B;AAEA;;AAGD;;;;;;;;;;;;;;;AA5BK;AAAA;AAAA,qCAyCaC,OAzCb,EAyCsBC,WAzCtB,EAyCmCC,QAzCnC,EAyC6C;;AAEjD,QAAIC,SAAS,KAAKC,wBAAL,CAA8BH,WAA9B,EAA2CC,QAA3C,CAAb;;AAEA;AACA,QAAIF,OAAJ,EAAa;AACZ,SAAI,KAAKF,sBAAT,EAAiC;AAChCE,cAAQK,KAAR,CAAcC,SAAd,GAA0BH,MAA1B;AACA,MAFD,MAGK;AACJH,cAAQO,YAAR,CAAqB,WAArB,EAAkCJ,MAAlC;AACA;AACD;;AAED;AATA,SAUK;AACJ,aAAO;AACNK,kBAAa,KAAKV,sBAAL,GAA8B,EAA9B,GAAmCK,MAD1C;AAEJE,cAAU,KAAKP,sBAAL,GAA+B,eAAeK,MAA9C,GAAwD;AAF9D,OAAP;AAIA;AAED;;AAID;;;;AAnEK;AAAA;AAAA,4CAsEoBF,WAtEpB,EAsEiCC,QAtEjC,EAsE2C;;AAE/C,QAAIC,SAAS,EAAb;AACA,QAAI,KAAKL,sBAAT,EAAiC;AAChC,SAAIG,WAAJ,EAAiBE,OAAOM,IAAP,iBAA0BR,YAAYS,CAAZ,IAAiB,CAA3C,cAAqDT,YAAYU,CAAZ,IAAiB,CAAtE;AACjB,SAAIT,aAAaU,SAAjB,EAA4BT,OAAOM,IAAP,aAAuBP,QAAvB;AAC5B,KAHD,MAIK;AACJ,SAAID,WAAJ,EAAiBE,OAAOM,IAAP,iBAA0BR,YAAYS,CAAZ,IAAiB,CAA3C,WAAkDT,YAAYU,CAAZ,IAAiB,CAAnE;AACjB,SAAIT,aAAaU,SAAjB,EAA4BT,OAAOM,IAAP,aAAuBP,QAAvB;AAC5B;;AAED,WAAOC,OAAOU,IAAP,CAAY,GAAZ,CAAP;AAEA;;AAID;;;;AAxFK;AAAA;AAAA,mDA2F2B;AAC/B,QAAMC,MAAMC,SAASC,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAZ;AACA,WAAO,eAAeF,GAAtB;AACA;;AAID;;;;;;AAlGK;AAAA;AAAA,iCAuGSd,OAvGT,EAuGkBiB,OAvGlB,EAuG2B;;AAE/B;AACA,QAAI,KAAKC,4BAAL,EAAJ,EAAyC;AACxClB,aAAQmB,SAAR,GAAoBF,OAApB;AACA;;AAED;AACA;AALA,SAMK;AACJ,UAAMG,YAAY,4FAA4FH,OAA5F,GAAsG,QAAxH;AACA,UAAMI,MAAM,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCH,SAAhC,EAA2C,iBAA3C,CAAZ;AACA,UAAMI,WAAWxB,QAAQyB,aAAR,CAAsBC,UAAtB,CAAiCL,IAAIM,eAArC,EAAsD,IAAtD,CAAjB;AACAC,YAAMC,IAAN,CAAWL,SAASM,UAApB,EAAgCC,OAAhC,CAAwC,UAACC,KAAD,EAAW;AAClD,WAAIA,MAAMC,QAAN,KAAmBC,KAAKC,YAA5B,EAA0C;AAC1CnC,eAAQoC,WAAR,CAAoBJ,KAApB;AACA,OAHD;AAIA;AAED;;AAID;;;;AA9HK;AAAA;AAAA,kDAiI0B;;AAE9B,QAAMlB,MAAMC,SAASC,eAAT,CAAyB,KAAKqB,MAA9B,EAAsC,KAAtC,CAAZ;AACAvB,QAAIK,SAAJ,GAAgB,SAAhB;AACA,WAAOL,IAAIwB,gBAAJ,CAAqB,GAArB,EAA0BC,MAA1B,KAAqC,CAA5C;AAEA;AAvII;;AAAA;AAAA;;AAgJN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhJM,KA2KAC,gBA3KA;;AA+KL;;;;;;;;;;;;;;;AAeA,4BAAYC,SAAZ,EAAuBC,IAAvB,EAA0C;AAAA,OAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AAEzC,OAAI,CAACF,SAAL,EAAgB;AACf,UAAM,IAAIG,KAAJ,CAAU,4DAAV,CAAN;AACA;;AAED,OAAI,CAACF,IAAL,EAAW;AACV,UAAM,IAAIE,KAAJ,CAAU,8CAAV,CAAN;AACA;;AAED,QAAKC,UAAL,GAAmBJ,SAAnB;AACA,QAAKK,KAAL,GAAgBJ,IAAhB;AACA,QAAKL,MAAL,GAAgB,4BAAhB;;AAEA,QAAKU,UAAL,GAAmB,IAAIlD,SAAJ,EAAnB;;AAEA,QAAKmD,cAAL,GAAsB;AACrBC,iCAA+BN,OAAOM,2BAAP,IAAsC,EADhD;AAEnBC,wBAAuBP,OAAOO,kBAAP,IAA6B,GAFjC;AAGnBC,eAAiBR,OAAOQ,SAAP,IAAoB,CAHlB;AAInBC,oBAAoBT,OAAOS,cAAP,IAA0B;AAAA,YAAM,CAAN;AAAA,KAJ3B;AAKnBC,oBAAoBV,OAAOU,cAAP,IAA0B;AAAA,YAAM,GAAN;AAAA,KAL3B;AAMnBC,mBAAoBX,OAAOW,aAAP,IAAwB,KANzB;AAOnBC,mBAAoBZ,OAAOY,aAAP,IAAyB;AAAA,YAAM,KAAN;AAAA,KAP1B;AAQnBC,sBAAsBb,OAAOa,gBAAP,IAA4B;AAAA,YAAM,KAAN;AAAA,KAR/B;AASnBC,6BAA2Bd,OAAOc,uBAAP,IAAmC,UAACC,IAAD;AAAA,YAAUA,IAAV;AAAA,KAT3C;AAUnBC,sBAAsBhB,OAAOgB,gBAAP,IAA4B,UAACD,IAAD;AAAA,YAAUA,IAAV;AAAA;AACpD;AAXqB,MAYnBE,oBAAuBjB,OAAOiB,kBAAP,IAA8B,UAACF,IAAD;AAAA,YAAUA,IAAV;AAAA,KAZlC;AAanBG,eAAiBlB,OAAOkB,SAAP,IAAoB;AAAA,YAAM,KAAN;AAAA,KAblB;AAcnBC,kBAAmBnB,OAAOmB,YAAP,IAAwB;AAAA,YAAK,KAAL;AAAA;AAdxB,IAAtB;;AAkBA;AACA,QAAKC,SAAL,GAAiB,EAAjB;AACAC,WAAQC,IAAR,CAAa,YAAb;AACA,QAAKC,WAAL;AACAF,WAAQG,OAAR,CAAgB,YAAhB;AAEA;;AAMD;;;;;;AA5OK;AAAA;AAAA,8BAgPMzB,IAhPN,EAgPY;AAAA;;AAEhBsB,YAAQC,IAAR,CAAa,YAAb;;AAEA,SAAKnB,KAAL,GAAaJ,IAAb;AACAsB,YAAQI,GAAR,CAAY,qCAAZ,EAAmD1B,IAAnD;;AAGA;AACA,QAAM2B,cAAc,KAAKrB,cAAL,CAAoBS,uBAApB,CAA4C,KAAKX,KAAjD,EAAwDwB,MAAxD,CAA+D,UAACZ,IAAD;AAAA,YAAU,CAAC,MAAKV,cAAL,CAAoBc,YAApB,CAAiCJ,IAAjC,CAAX;AAAA,KAA/D,CAApB;AACAM,YAAQI,GAAR,CAAY,gCAAZ,EAA8CC,YAAY9B,MAA1D;;AAEA,QAAMgC,WAAW,KAAKC,YAAL,CACdH,WADc,EAEd,KAAKrB,cAAL,CAAoBW,gBAFN,EAGd,KAAKc,SAAL,CAAeC,MAAf,EAHc,EAId,KAAKC,YAAL,GAAoBN,YAAY9B,MAJlB,EAKd,KAAKS,cAAL,CAAoBG,SALN,CAAjB;;AAQA,SAAKyB,kCAAL,CAAwCL,QAAxC;;AAIA;AACA,QAAMM,cAAc,KAAK/B,KAAL,CAAWwB,MAAX,CAAkB,UAACZ,IAAD;AAAA,YAAU,CAAC,MAAKV,cAAL,CAAoBa,SAApB,CAA8BH,IAA9B,CAAX;AAAA,KAAlB,CAApB;AACAM,YAAQI,GAAR,CAAY,mCAAZ,EAAiDS,YAAYtC,MAA7D;AACA,QAAMuC,WAAW,KAAKN,YAAL,CAChBK,WADgB,EAEd,KAAK7B,cAAL,CAAoBM,aAFN,EAGd,CAHc,EAId,KAAKqB,YAAL,GAAoBE,YAAYtC,MAJlB,EAKd,KAAKS,cAAL,CAAoBG,SALN,CAAjB;;AAQA,SAAK4B,gCAAL,CAAsCD,QAAtC;;AAIA;AACA,SAAKL,SAAL,GAAiBF,QAAjB;AACA,SAAKS,SAAL,GAAiBF,QAAjB;;AAEAd,YAAQG,OAAR,CAAgB,YAAhB;AAEA;;AAID;;;;AAjSK;AAAA;AAAA,gDAoSwBnE,OApSxB,EAoSiCiF,IApSjC,EAoSuCC,IApSvC,EAoS6CC,OApS7C,EAoSsD;;AAE1D,QAAMC,UAAU,CAAC,SAAD,EAAY,QAAZ,CAAhB;AAAA,QACGC,aAAaF,UAAU,CAAV,GAAc,CAD9B;;AAGAnF,YAAQsF,SAAR,CAAkBC,MAAlB,CAAyBH,QAAQI,KAAKC,GAAL,CAASJ,aAAa,CAAtB,CAAR,CAAzB;AACArF,YAAQsF,SAAR,CAAkBI,GAAlB,CAAsBN,QAAQC,UAAR,CAAtB;;AAEA,SAAKtC,UAAL,CAAgB4C,iBAAhB,CAAkC3F,OAAlC,EAA2C,EAACU,GAAGuE,IAAJ,EAAUtE,GAAGuE,IAAb,EAA3C;AAEA;;AAKD;;;;AAnTK;AAAA;AAAA,oDAsT4BU,KAtT5B,EAsTmC;AAAA;;AAEvC5B,YAAQC,IAAR,CAAa,cAAb;;AAEA,QAAM4B,SAASC,OAAOC,IAAP,CAAY,KAAKhC,SAAL,CAAeiC,IAA3B,CAAf;AACAH,WAAO9D,OAAP,CAAe,UAACkE,KAAD,EAAW;;AAEzB,SAAMC,MAAMN,MAAMO,WAAN,CAAkBF,KAAlB,CAAZ;AAAA,SACGG,MAAM,OAAKrC,SAAL,CAAeiC,IAAf,CAAoBC,KAApB,CADT;;AAGA,YAAKI,4BAAL,CAAkCD,GAAlC,EAAuC,CAAvC,EAA0CF,GAA1C,EAA+CA,QAAQtF,SAAvD;AAEA,KAPD;;AASAoD,YAAQG,OAAR,CAAgB,cAAhB;AAEA;;AAOD;;;;AA7UK;AAAA;AAAA,sDAgV8ByB,KAhV9B,EAgVqC;AAAA;;AAEzC5B,YAAQC,IAAR,CAAa,cAAb;;AAEA;AACA,QAAMqC,SAASR,OAAOC,IAAP,CAAY,KAAKhC,SAAL,CAAewC,OAA3B,CAAf;AACAD,WAAOvE,OAAP,CAAe,UAACyE,KAAD,EAAW;;AAEzB,SAAMN,MAAMN,MAAMO,WAAN,CAAkBK,KAAlB,CAAZ;;AAEA,YAAKzC,SAAL,CAAewC,OAAf,CAAuBC,KAAvB,EAA8BzE,OAA9B,CAAsC,UAAC/B,OAAD,EAAa;AAClD,aAAKqG,4BAAL,CAAkCrG,OAAlC,EAA2CkG,GAA3C,EAAgD,CAAhD,EAAmDA,QAAQtF,SAA3D;AACA,MAFD;AAKA,KATD;;AAWAoD,YAAQG,OAAR,CAAgB,cAAhB;AAEA;;AAOD;;;;AA1WK;AAAA;AAAA,iCA6WS;AAAA;;AAGb;AACA,QAAI,CAAC,KAAKJ,SAAL,CAAejD,GAApB,EAAyB;AACxB,UAAKiD,SAAL,CAAejD,GAAf,GAAqB,KAAK2F,UAAL,EAArB;AACA,UAAK5D,UAAL,CAAgBT,WAAhB,CAA4B,KAAK2B,SAAL,CAAejD,GAA3C;AACA;AACD;AAJA,SAKK;AACJ,WAAKiD,SAAL,CAAejD,GAAf,CAAmBK,SAAnB,GAA+B,EAA/B;AACA;;AAED,QAAMuF,mBAAqB,KAAKC,oBAAL,EAA3B;;AAIA;AACA,QAAMC,OAAOF,mBAAmB,KAAK1D,cAAL,CAAoBC,2BAApD;AACA;AACA,SAAKwB,SAAL,GAAiB,KAAKD,YAAL,CAAkB,KAAKxB,cAAL,CAAoBS,uBAApB,CAA4C,KAAKX,KAAjD,CAAlB,EAA2E,KAAKE,cAAL,CAAoBW,gBAA/F,EAAiHiD,IAAjH,EAAuH,KAAKC,YAAL,KAAsBD,IAAtB,GAA6B,EAApJ,EAAwJ,KAAK5D,cAAL,CAAoBG,SAA5K,CAAjB;;AAEA;AACA;AACA;AACA,SAAKwB,YAAL,GAAoB,KAAKF,SAAL,CAAeqC,IAAf,EAApB;;AAEA;AACA;AACA,SAAK9B,SAAL,GAAiB,KAAKR,YAAL,CAAkB,KAAK1B,KAAvB,EAA8B,KAAKE,cAAL,CAAoBM,aAAlD,EAAiE,CAAjE,EAAoE,KAAKR,KAAL,CAAWP,MAAX,GAAoB,KAAKkC,SAAL,CAAeqC,IAAf,EAAxF,EAA+G,KAAK9D,cAAL,CAAoBG,SAAnI,CAAjB;;AAEAa,YAAQI,GAAR,CAAY,wDAAZ,EAAsE,KAAKyC,YAAL,EAAtE,EAA2FH,gBAA3F;;AAIA;AACA,QAAMzF,UAAU,EAAhB;;AAIA;AACA+C,YAAQC,IAAR,CAAa,kBAAb;AACAhD,YAAQR,IAAR,CAAa,KAAKsG,qBAAL,CAA2B,KAAKtC,SAAL,CAAeuC,SAAf,EAA3B,CAAb;AACAhD,YAAQG,OAAR,CAAgB,kBAAhB;;AAIA;AACAH,YAAQC,IAAR,CAAa,gBAAb;AACAhD,YAAQR,IAAR,CAAa,KAAKwG,eAAL,CACZ,KAAKjE,cAAL,CAAoBS,uBAApB,CAA4C,KAAKX,KAAjD,CADY,EAEV,KAAKE,cAAL,CAAoBQ,gBAFV,EAGV,KAAKR,cAAL,CAAoBW,gBAHV,EAIV,KAAKc,SAJK,CAAb;AAMAT,YAAQG,OAAR,CAAgB,gBAAhB;;AAIA;AACAH,YAAQC,IAAR,CAAa,YAAb;AACAhD,YAAQR,IAAR,CAAa,2BAAb;AACAQ,YAAQR,IAAR,CAAa,KAAKyG,WAAL,CACV,KAAKpE,KADK,EAEV,KAAKE,cAAL,CAAoBY,kBAFV,EAGV,KAAKZ,cAAL,CAAoBO,aAHV,EAIV,KAAKP,cAAL,CAAoBM,aAJV,EAKV,KAAKN,cAAL,CAAoBW,gBALV,EAMV,KAAKX,cAAL,CAAoBI,cANV,EAOV,KAAKJ,cAAL,CAAoBK,cAPV,EAQV,KAAKoB,SARK,EASV,KAAKO,SATK,EAUV,KAAKhC,cAAL,CAAoBC,2BAVV,CAAb;AAYAhC,YAAQR,IAAR,CAAa,MAAb;AACAuD,YAAQG,OAAR,CAAgB,YAAhB;;AAKAH,YAAQC,IAAR,CAAa,UAAb;AACA,SAAKlB,UAAL,CAAgBoE,aAAhB,CAA8B,KAAKpD,SAAL,CAAejD,GAA7C,EAAkDG,QAAQJ,IAAR,CAAa,EAAb,CAAlD;AACAmD,YAAQG,OAAR,CAAgB,UAAhB;;AAKA;AACAH,YAAQC,IAAR,CAAa,mBAAb;AACAD,YAAQC,IAAR,CAAa,4BAAb;AACA,QAAMmD,WAAWrG,SAASuB,gBAAT,CAA0B,cAA1B,CAAjB;AACA,QAAI+E,iBAAiB,CAArB;AACAzF,UAAMC,IAAN,CAAWuF,QAAX,EAAqBrF,OAArB,CAA6B,UAACuF,IAAD,EAAU;AACtCD,sBAAiB7B,KAAK+B,GAAL,CAASF,cAAT,EAAyBC,KAAKE,qBAAL,GAA6BC,KAAtD,CAAjB;AACA,KAFD;AAGAzD,YAAQI,GAAR,CAAY,4CAAZ,EAA0DiD,cAA1D;AACArD,YAAQG,OAAR,CAAgB,4BAAhB;;AAEAH,YAAQC,IAAR,CAAa,yBAAb;;AAEA;AACA;AACA,SAAKlB,UAAL,CAAgB4C,iBAAhB,CAAkC,KAAK5B,SAAL,CAAejD,GAAf,CAAmB4G,aAAnB,CAAiC,eAAjC,CAAlC,EAAqF,EAAEhH,GAAG,CAAL,EAAQC,GAAG6E,KAAKmC,IAAL,CAAUN,cAAV,CAAX,EAArF;AACArD,YAAQG,OAAR,CAAgB,yBAAhB;AACAH,YAAQG,OAAR,CAAgB,mBAAhB;;AAEA;AACAH,YAAQC,IAAR,CAAa,eAAb;AACA,SAAKlB,UAAL,CAAgB4C,iBAAhB,CAAkC,KAAK5B,SAAL,CAAejD,GAAf,CAAmB4G,aAAnB,CAAiC,cAAjC,CAAlC,EAAoF,EAAEhH,GAAG,CAAL,EAAQC,GAAG6E,KAAKmC,IAAL,CAAUN,iBAAiB,KAAKrE,cAAL,CAAoBC,2BAA/C,CAAX,EAApF;AACAe,YAAQG,OAAR,CAAgB,eAAhB;;AAKA;AACAH,YAAQC,IAAR,CAAa,WAAb;AACA,QAAM2D,SAAUP,iBAAiB,KAAKrE,cAAL,CAAoBC,2BAArC,GAAmE,KAAK+B,SAAL,CAAe8B,IAAf,KAAwB,KAAKhE,KAAL,CAAWP,MAAtH;AACA,SAAKwB,SAAL,CAAejD,GAAf,CAAmBT,KAAnB,CAAyBuH,MAAzB,GAAkCA,SAAS,IAA3C;AACA5D,YAAQG,OAAR,CAAgB,WAAhB;;AAKA;AACAH,YAAQC,IAAR,CAAa,kBAAb;;AAEA;AACA;AACA,SAAKF,SAAL,CAAeiC,IAAf,GAAsB,EAAtB;AACA,SAAKjC,SAAL,CAAewC,OAAf,GAAyB,EAAzB;;AAEA,QAAMP,OAAO,KAAKjC,SAAL,CAAejD,GAAf,CAAmBwB,gBAAnB,CAAoC,aAApC,CAAb;AACAV,UAAMC,IAAN,CAAWmE,IAAX,EAAiBjE,OAAjB,CAAyB,UAACqE,GAAD,EAAS;AACjC,YAAKrC,SAAL,CAAeiC,IAAf,CAAoBI,IAAIyB,YAAJ,CAAiB,iBAAjB,CAApB,IAA2DzB,GAA3D;AACA,KAFD;;AAIA;AACA,QAAM0B,QAAQ,KAAK/D,SAAL,CAAejD,GAAf,CAAmBwB,gBAAnB,CAAoC,4BAApC,CAAd;AACAV,UAAMC,IAAN,CAAWiG,KAAX,EAAkB/F,OAAlB,CAA0B,UAACgG,IAAD,EAAU;AACnC,SAAMC,aAAaD,KAAKF,YAAL,CAAkB,wBAAlB,CAAnB;AACA,SAAI,CAAC,OAAK9D,SAAL,CAAewC,OAAf,CAAuByB,UAAvB,CAAL,EAAyC;AACxC,aAAKjE,SAAL,CAAewC,OAAf,CAAuByB,UAAvB,IAAqC,CAACD,IAAD,CAArC;AACA,MAFD,MAGK;AACJ,aAAKhE,SAAL,CAAewC,OAAf,CAAuByB,UAAvB,EAAmCvH,IAAnC,CAAwCsH,IAAxC;AACA;AACD,KARD;;AAUA/D,YAAQG,OAAR,CAAgB,kBAAhB;AACAH,YAAQI,GAAR,CAAY,wCAAZ,EAAsD,KAAKL,SAAL,CAAeiC,IAArE,EAA2E,KAAKjC,SAAL,CAAewC,OAA1F;;AAMA;AACA,QAAM0B,OAAO,KAAKlE,SAAL,CAAejD,GAAf,CAAmB4G,aAAnB,CAAiC,cAAjC,CAAb;AACA,SAAK3D,SAAL,CAAemE,iBAAf,GAAmCtH,SAAnC;AACA,SAAKmD,SAAL,CAAeoE,SAAf,GAA2B,KAAKC,yBAAL,CAA+B,KAAK3D,SAAL,CAAeuC,SAAf,EAA/B,CAA3B;AACAiB,SAAK7F,WAAL,CAAiB,KAAK2B,SAAL,CAAeoE,SAAhC;;AAEA;AACA;AACAF,SAAKI,gBAAL,CAAsB,WAAtB,EAAmC,UAACC,EAAD;AAAA,YAAQ,OAAKC,iBAAL,CAAuBD,EAAvB,CAAR;AAAA,KAAnC;AACAL,SAAKI,gBAAL,CAAsB,YAAtB,EAAoC,UAACC,EAAD;AAAA,YAAQ,OAAKE,gBAAL,CAAsBF,EAAtB,CAAR;AAAA,KAApC;AAEA;;AAID;;;;AAvhBK;AAAA;AAAA,sCA0hBc;;AAElB,SAAKvE,SAAL,CAAeoE,SAAf,CAAyB9H,KAAzB,CAA+BoI,OAA/B,GAAyC,CAAzC;AACA,SAAK1E,SAAL,CAAemE,iBAAf,GAAmCtH,SAAnC;;AAEA,SAAK8H,0BAAL;AAEA;;AAID;;;;AAriBK;AAAA;AAAA,gDAwiBwB;;AAE5B,QAAMC,UAAU,KAAK5E,SAAL,CAAe6E,cAA/B;AACA,QAAMC,UAAU,KAAK9E,SAAL,CAAe+E,iBAA/B;;AAEAC,WAAOC,qBAAP,CAA6B,YAAM;AAClC,SAAIL,OAAJ,EAAaA,QAAQrD,SAAR,CAAkBC,MAAlB,CAAyB,QAAzB;AACb,SAAIsD,OAAJ,EAAaA,QAAQvD,SAAR,CAAkBC,MAAlB,CAAyB,QAAzB;AACb,KAHD;AAKA;;AAGD;;;;AArjBK;AAAA;AAAA,qCAwjBa+C,EAxjBb,EAwjBiB;;AAErB;AACA,QAAIW,SAASX,GAAGW,MAAhB;;AAEA,WAAOA,OAAOC,UAAd,EAA0B;AACzB;AACA,SAAI,CAACD,OAAO3D,SAAZ,EAAuB;AACvB;AACA,SAAI2D,OAAO3D,SAAP,CAAiB6D,QAAjB,CAA0B,aAA1B,CAAJ,EAA8C;AAC9C;AACAF,cAASA,OAAOC,UAAhB;AACA;;AAED;AACA,QAAI,CAACD,MAAD,IAAWA,WAAWlI,QAA1B,EAAoC;;AAEpC;AACA,QAAI,KAAKgD,SAAL,CAAemE,iBAAf,KAAqCe,MAAzC,EAAiD;;AAEjD;AACA,SAAKlF,SAAL,CAAemE,iBAAf,GAAmCe,MAAnC;;AAEAjF,YAAQoF,KAAR,CAAcH,MAAd;AACA,SAAKI,oBAAL,CAA0BJ,MAA1B;;AAEA,SAAKP,0BAAL;AACA,SAAKY,iBAAL,CAAuBL,MAAvB;AAEA;;AAID;;;;AAzlBK;AAAA;AAAA,qCA4lBaM,WA5lBb,EA4lB0B;;AAE9B,QAAMZ,UAAUY,YAAYL,UAAZ,CAAuBxB,aAAvB,CAAqC,YAArC,CAAhB;AACA,SAAK3D,SAAL,CAAe6E,cAAf,GAAgCD,OAAhC;;AAEA,QAAMnC,QAAQ+C,YAAY1B,YAAZ,CAAyB,wBAAzB,CAAd;AACA,QAAMgB,UAAU,KAAK9E,SAAL,CAAejD,GAAf,CAAmB4G,aAAnB,0CAAyElB,KAAzE,OAAhB;AACA,SAAKzC,SAAL,CAAe+E,iBAAf,GAAmCD,OAAnC;;AAEAE,WAAOC,qBAAP,CAA6B,YAAM;AAClCL,aAAQrD,SAAR,CAAkBI,GAAlB,CAAsB,QAAtB;AACAmD,aAAQvD,SAAR,CAAkBI,GAAlB,CAAsB,QAAtB;AACA,KAHD;AAKA;AA1mBI;AAAA;AAAA,wCAgnBgB6D,WAhnBhB,EAgnB6B;;AAEjC,QAAMjG,gBAAgBiG,YAAY1B,YAAZ,CAAyB,qBAAzB,CAAtB;AACA,QAAM2B,gBAAgBD,YAAY1B,YAAZ,CAAyB,wBAAzB,CAAtB;AACA;AACA,QAAMM,YAAY,KAAKpE,SAAL,CAAeoE,SAAjC;AACA,SAAKpF,UAAL,CAAgB4C,iBAAhB,CAAkCwC,SAAlC,EAA6C,EAAEzH,GAAG,KAAK+D,SAAL,CAAe0B,WAAf,CAA2BqD,aAA3B,CAAL,EAAgD7I,GAAG,KAAKqE,SAAL,CAAemB,WAAf,CAA2B7C,aAA3B,CAAnD,EAA7C;AACA6E,cAAU9H,KAAV,CAAgBoI,OAAhB,GAA0B,CAA1B;AACAN,cAAUT,aAAV,CAAwB,MAAxB,EAAgC+B,WAAhC,GAA8CF,YAAY7B,aAAZ,CAA0B,MAA1B,EAAkC+B,WAAhF;AACAtB,cAAUT,aAAV,CAAwB,QAAxB,EAAkCnH,YAAlC,CAA+C,MAA/C,EAAuDgJ,YAAY7B,aAAZ,CAA0B,KAA1B,EAAiCG,YAAjC,CAA8C,MAA9C,CAAvD;AAEA;;AAGD;;;;;AA9nBK;AAAA;AAAA,6CAkoBqB6B,cAloBrB,EAkoBqC;;AAEzC,QAAMC,SAASnE,KAAKoE,KAAL,CAAWF,iBAAiB,CAAjB,GAAqB,EAAhC,CAAf;;AAEA,QAAMG,IAAI9I,SAASC,eAAT,CAAyB,KAAKqB,MAA9B,EAAsC,GAAtC,CAAV;AACAwH,MAAEvE,SAAF,CAAYI,GAAZ,CAAgB,iBAAhB;AACAmE,MAAExJ,KAAF,CAAQyJ,aAAR,GAAwB,MAAxB;AACAD,MAAExJ,KAAF,CAAQoI,OAAR,GAAkB,CAAlB;AACAoB,MAAEtJ,YAAF,CAAe,GAAf,EAAoB,CAApB;AACAsJ,MAAEtJ,YAAF,CAAe,GAAf,EAAoB,CAApB;AACAsJ,MAAExJ,KAAF,CAAQ0J,MAAR,GAAiB,SAAjB;;AAEA;AACA,QAAM9I,8DACgC0I,MADhC,gJAAN;;AAKA,SAAK5G,UAAL,CAAgBoE,aAAhB,CAA8B0C,CAA9B,EAAiC5I,OAAjC;AACA,WAAO4I,CAAP;AAEA;;AAKD;;;;AA5pBK;AAAA;AAAA,0CA+pBkB;AAAA;;AAEtB7F,YAAQC,IAAR,CAAa,qBAAb;;AAEA;AACA,QAAM+B,OAAO,EAAb;AACA;AACA,QAAMlB,WAAW,KAAKN,YAAL,CAAkB,KAAK1B,KAAvB,EAA8B,UAACY,IAAD;AAAA,YAAUA,IAAV;AAAA,KAA9B,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAAjB;AACA,SAAKZ,KAAL,CAAWf,OAAX,CAAmB,UAACqE,GAAD,EAAS;AAC3BJ,UAAKvF,IAAL,CAAU,OAAKuJ,UAAL,CAAgB,OAAKC,eAAL,CAAqB,OAAKjH,cAAL,CAAoBO,aAApB,CAAkC6C,GAAlC,CAArB,EAA6DtB,QAA7D,EAAuE,CAAvE,CAAhB,EAA2F,OAAK9B,cAAL,CAAoBM,aAApB,CAAkC8C,GAAlC,CAA3F,EAAmItB,QAAnI,CAAV;AACA,KAFD;;AAIA;AACA,QAAM+E,IAAI9I,SAASC,eAAT,CAAyB,KAAKqB,MAA9B,EAAsC,GAAtC,CAAV;AACA,SAAKU,UAAL,CAAgBoE,aAAhB,CAA8B0C,CAA9B,EAAiC7D,KAAKnF,IAAL,CAAU,EAAV,CAAjC;AACA,SAAKkD,SAAL,CAAejD,GAAf,CAAmBsB,WAAnB,CAA+ByH,CAA/B;;AAEA;AACA,QAAIK,WAAWL,EAAErC,qBAAF,GAA0BC,KAAzC;;AAEA;AACA,SAAK1D,SAAL,CAAejD,GAAf,CAAmBqJ,WAAnB,CAA+BN,CAA/B;;AAEA7F,YAAQG,OAAR,CAAgB,qBAAhB;;AAEA,WAAOqB,KAAKmC,IAAL,CAAUuC,QAAV,CAAP;AAEA;;AAKD;;;;;AA/rBK;AAAA;AAAA,gCAmsBQ/J,MAnsBR,EAmsBgBiK,kBAnsBhB,EAmsBoC1F,OAnsBpC,EAmsB4C+C,KAnsB5C,EAmsBmDtE,UAnsBnD,EAmsB8D;;AAElEa,YAAQI,GAAR,CAAY,uFAAZ,EAAqGjE,MAArG,EAA6GuE,OAA7G,EAAqH+C,KAArH,EAA4HtE,UAA5H;AACA;AACA,QAAMkH,YAAY,EAAlB;AACA;AACA,QAAMvD,QAAOtB,KAAK8E,KAAL,CAAY7C,KAAD,GAAQtH,OAAOoC,MAA1B,CAAb;AACA,QAAMyE,aAAYF,QAAO3D,UAAzB;AACAhD,WAAO4B,OAAP,CAAe,UAAC2B,IAAD,EAAO6G,KAAP,EAAiB;AAC/BF,eAAUD,mBAAmB1G,IAAnB,CAAV,IAAsC6G,QAAQzD,KAAR,GAAepC,OAArD;AACA,KAFD;AAGAV,YAAQI,GAAR,CAAY,wCAAZ,EAAsDiG,SAAtD;AACA,WAAO;AACNlE,kBAAe,qBAACzC,IAAD;AAAA,aAAU2G,UAAU3G,IAAV,CAAV;AAAA,MADT;AAEJsD,gBAAa;AAAA,aAAMA,UAAN;AAAA,MAFT;AAGJ7D,gBAAa;AAAA,aAAMA,UAAN;AAAA,MAHT;AAIJ2D,WAAS;AAAA,aAAMA,KAAN;AAAA,MAJL;AAKJpC,aAAU;AAAA,aAAMA,OAAN;AAAA;AALN,KAAP;AAQA;;AAGD;;;;AA1tBK;AAAA;AAAA,mCA6tBW8F,KA7tBX,EA6tBkB5E,KA7tBlB,EA6tByB6E,WA7tBzB,EA6tBsC;;AAE1C,kEAAwD7E,MAAMoB,SAAN,KAAoB,CAA5E,6BAAmGyD,WAAnG,uBACKD,KADL;AAIA;;AAGD;;;;;;AAtuBK;AAAA;AAAA,8BA2uBMvJ,OA3uBN,EA2uBe+G,UA3uBf,EA2uB2BlD,QA3uB3B,EA2uBqC;;AAEzC,QAAM4F,iBAAiB,KAAK3H,UAAL,CAAgB4C,iBAAhB,CAAkC,IAAlC,EAAwC,EAAEjF,GAAG,CAAL,EAAQC,GAAGmE,SAASqB,WAAT,CAAqB6B,UAArB,CAAX,EAAxC,CAAvB;;AAEA,WAAO,kEAC4CA,UAD5C,uBACwE0C,eAAelK,SADvF,mBAC8GkK,eAAerK,KAD7H,uBAEFY,OAFE,qBAGA0J,OAHA,CAGQ,SAHR,EAGmB,EAHnB,CAAP;AAKA;;AAID;;;;AAxvBK;AAAA;AAAA,+BA2vBOjI,IA3vBP,EA2vBakI,WA3vBb,EA2vB0BC,aA3vB1B,EA2vByCC,qBA3vBzC,EA2vBgEnH,gBA3vBhE,EA2vBkFoH,UA3vBlF,EA2vB8FC,UA3vB9F,EA2vB2GzG,QA3vB3G,EA2vBqHO,QA3vBrH,EA2vB+H7B,2BA3vB/H,EA2vB4J;AAAA;;AAEhKe,YAAQI,GAAR,CAAY,6FAAZ,EAA2G1B,IAA3G,EAAiHkI,WAAjH,EAA8HC,aAA9H,EAA6IC,qBAA7I,EAAoKvG,QAApK;;AAEA,QAAMyB,OAAO,EAAb;AACAtD,SAAKX,OAAL,CAAa,UAACkJ,OAAD,EAAa;AACzB,SAAMC,QAAQ,OAAKjB,eAAL,CAAqBY,cAAcI,OAAd,CAArB,EAA6CnG,QAA7C,EAAuDP,SAASG,MAAT,KAAoBzB,2BAA3E,CAAd;AACA,SAAM6E,QAAQ,OAAKqD,kBAAL,CAAwBP,YAAYK,OAAZ,CAAxB,EAA8CtH,gBAA9C,EAAgEmH,sBAAsBG,OAAtB,CAAhE,EAAgGF,UAAhG,EAA4GC,UAA5G,EAAwHzG,QAAxH,CAAd;AACAyB,UAAKvF,IAAL,CAAU,OAAKuJ,UAAL,CAAgBkB,QAAQpD,KAAxB,EAA+BgD,sBAAsBG,OAAtB,CAA/B,EAA+DnG,QAA/D,CAAV;AACA,KAJD;AAKA,WAAOkB,KAAKnF,IAAL,CAAU,EAAV,CAAP;AAEA;;AAID;;;;AA3wBK;AAAA;AAAA,sCA8wBc6B,IA9wBd,EA8wBoB0I,wBA9wBpB,EA8wB8C9H,aA9wB9C,EA8wB6DyH,UA9wB7D,EA8wByEC,UA9wBzE,EA8wBqFpF,KA9wBrF,EA8wB4F;AAAA;;AAChG,QAAMkC,QAAQ,EAAd;AACApF,SAAKX,OAAL,CAAa,UAACsJ,SAAD,EAAe;;AAE3B;AACA,SAAIL,WAAWK,SAAX,MAA0BzK,SAA9B,EAAyC;AACxC;AACA;;AAED,SAAM8J,iBAAiB,OAAK3H,UAAL,CAAgB4C,iBAAhB,CAAkC,IAAlC,EAAwC,EAACjF,GAAGkF,MAAMO,WAAN,CAAkBiF,yBAAyBC,SAAzB,CAAlB,CAAJ,EAA4D1K,GAAG,CAA/D,EAAxC,CAAvB;;AAEA;AACA;AACAmH,WAAMrH,IAAN,uDACsCiK,eAAelK,SADrD,oCAC6F4K,yBAAyBC,SAAzB,CAD7F,iCAC4J/H,aAD5J,mBACsLoH,eAAerK,KADrM,qEAE8C0K,WAAWM,SAAX,CAF9C,2GAGyEL,WAAWK,SAAX,CAHzE;AAMA,KAjBD;AAkBA,WAAOvD,MAAMjH,IAAN,CAAW,EAAX,CAAP;AACA;;AAID;;;;AAvyBK;AAAA;AAAA,mCA0yBW6B,IA1yBX,EA0yBiB4I,YA1yBjB,EA0yB+BlB,kBA1yB/B,EA0yBmDxE,KA1yBnD,EA0yB0D;AAAA;;AAC9D5B,YAAQI,GAAR,CAAY,mFAAZ,EAAiG1B,IAAjG,EAAuG4I,YAAvG,EAAqHlB,kBAArH,EAAyIxE,KAAzI;AACA,QAAM2F,QAAQ,EAAd;AACAA,UAAM9K,IAAN;AACAiC,SAAKX,OAAL,CAAa,UAACuF,IAAD,EAAU;AACtBiE,WAAM9K,IAAN,CAAW,OAAK+K,cAAL,CAAoBF,aAAahE,IAAb,CAApB,EAAwC8C,mBAAmB9C,IAAnB,CAAxC,EAAkE1B,MAAMO,WAAN,CAAkBiE,mBAAmB9C,IAAnB,CAAlB,CAAlE,CAAX;AACA,KAFD;AAGAiE,UAAM9K,IAAN,CAAW,MAAX;AACA,WAAO8K,MAAM1K,IAAN,CAAW,EAAX,CAAP;AACA;;AAID;;;;AAvzBK;AAAA;AAAA,kCA0zBU2J,KA1zBV,EA0zBiBxC,UA1zBjB,EA0zB6BpB,IA1zB7B,EA0zBmC;;AAEvC,QAAM8D,iBAAiB,KAAK3H,UAAL,CAAgB4C,iBAAhB,CAAkC,IAAlC,EAAwC,EAAEjF,GAAGkG,IAAL,EAAWjG,GAAG,CAAd,EAAxC,CAAvB;AAAA,QACGT,WAAW,KAAK6C,UAAL,CAAgB4C,iBAAhB,CAAkC,IAAlC,EAAwC,IAAxC,EAA8C,CAAC,EAA/C,CADd;;AAGA,4EACmDqC,UADnD,uBAC+E0C,eAAelK,SAD9F,mBACqHkK,eAAerK,KADpI,yCAEsBH,SAASM,SAF/B,mBAEsDN,SAASG,KAF/D,WAE2EmK,KAF3E;AAKA;;AAID;;;;AAx0BK;AAAA;AAAA,yCA20BiBiB,UA30BjB,EA20B6B;;AAEjC,QAAMC,gBAAgBlG,KAAK8E,KAAL,CAAWmB,aAAa,CAAxB,CAAtB;;AAEA,+EAEqCC,aAFrC;AAMA;;AAID;;;;;AAz1BK;AAAA;AAAA,kCA61BU;AACd,WAAO,KAAK3H,SAAL,CAAejD,GAAf,CAAmB0G,qBAAnB,GAA2CC,KAAlD;AACA;;AAID;;;;AAn2BK;AAAA;AAAA,gCAs2BQ;;AAEZ,QAAM3G,MAAMC,SAASC,eAAT,CAAyB,KAAKqB,MAA9B,EAAsC,KAAtC,CAAZ;AACA,WAAOvB,GAAP;AAEA;AA32BI;;AAAA;AAAA;;AAg3BNiI,QAAO4C,MAAP,GAAgB5C,OAAO4C,MAAP,IAAiB,EAAjC;AACA5C,QAAO4C,MAAP,CAAcnJ,gBAAd,GAAiCA,gBAAjC;AAEA,CAn3BD","file":"resistance-matrix.es2015.js","sourcesContent":["(() => {\n\n\t/* global window, document, DOMParser, Node */\n\n\t/**\n\t* @TODO: \n\t* - Outsource MouseOverCircle\n\t* - Split base up into generator (returns text) and instance (filters)\n\t* - Use multiple files\n\t* - Only watch changed files\n\t*/\n\n\t/**\n\t* IE11 has huge problems with today's SVG standards: \n\t* - does not know CSS transforms\n\t* - does not know innerHTML\n\t*\n\t* This class provides basic fallbacks without being too fancy or imperformant.\n\t*/\n\tclass SVGHelper {\n\n\t\tconstructor() {\n\n\t\t\tthis._supportsCSSTransforms = this._browserSupportsCSSTransforms();\n\n\t\t}\n\n\n\t\t/**\n\t\t* Set element.transform to values provided (IE11) resp. use the CSS transform propertiy (all \n\t\t* current browsers). We don't want to use the transform attribute as it is not transitionable\n\t\t* (cannot be transitioned through CSS)\n\t\t* \n\t\t* @param {HTMLElement|undefined} element\t\tElement to perform transformation on; if none is passed in, \n\t\t*\t\t\t\t\t\t\t\t\t\t\t\t(e.g. if value needs to be set on a String, not an element), \n\t\t*\t\t\t\t\t\t\t\t\t\t\t\tobject is returned with properties 'style' and 'attribute' and\n\t\t*\t\t\t\t\t\t\t\t\t\t\t\tcorresponding values, for good browsers e.g.:\n\t\t*\t\t\t\t\t\t\t\t\t\t\t\t{attribute: '', style: 'translate(0px, 20px)'}\n\t\t* @param {Object} translation\t\t\t\t\tProperties supported: x and y (undefined is turned into 0)\n\t\t* @param {Number} rotation\t\t\t\t\t\tRotation (in deg)\n\t\t*/\n\t\tsetTransformation(element, translation, rotation) {\n\t\t\t\n\t\t\tlet values = this._getTransformationValues(translation, rotation);\n\n\t\t\t// element is HTMLElement\n\t\t\tif (element) {\n\t\t\t\tif (this._supportsCSSTransforms) {\n\t\t\t\t\telement.style.transform = values;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\telement.setAttribute('transform', values);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Return object with attribute and style properties (see @param element above)\n\t\t\telse {\n\t\t\t\treturn {\n\t\t\t\t\tattribute\t\t: this._supportsCSSTransforms ? '' : values\n\t\t\t\t\t, style\t\t\t: this._supportsCSSTransforms ? ('transform:' + values) : ''\n\t\t\t\t};\n\t\t\t}\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Returns the values for a transformation\n\t\t*/\n\t\t_getTransformationValues(translation, rotation) {\n\t\n\t\t\tlet values = [];\n\t\t\tif (this._supportsCSSTransforms) {\n\t\t\t\tif (translation) values.push(`translate(${ translation.x || 0 }px, ${ translation.y || 0 }px)`);\n\t\t\t\tif (rotation !== undefined) values.push(`rotate(${ rotation }deg)`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (translation) values.push(`translate(${ translation.x || 0 } ${ translation.y || 0 })`);\n\t\t\t\tif (rotation !== undefined) values.push(`rotate(${ rotation })`);\n\t\t\t}\n\n\t\t\treturn values.join(' ');\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Returns true if browser supports CSS transforms on SVG elements, else false.\n\t\t*/\n\t\t_browserSupportsCSSTransforms() {\n\t\t\tconst svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\t\treturn 'transform' in svg;\n\t\t}\n\n\n\n\t\t/**\n\t\t* IE11 does not support innerHTML on SVG elements, needs a work around. \n\t\t* @param {HTMLElement} element\t\t\tElement that content should be set on (element.innerHTML = content)\n\t\t* @param {String} content\t\t\t\tContent to add to element\n\t\t*/\n\t\tsetSVGContent(element, content) {\n\n\t\t\t// Normal browsers\n\t\t\tif (this._browserSupportsSvgInnerHTML()) {\n\t\t\t\telement.innerHTML = content;\n\t\t\t}\n\n\t\t\t// Stupid browsers (AKA IE11) \n\t\t\t// See http://stackoverflow.com/questions/9723422/is-there-some-innerhtml-replacement-in-svg-xml\n\t\t\telse {\n\t\t\t\tconst xmlString = '<svg xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'>' + content + '</svg>';\n\t\t\t\tconst doc = new DOMParser().parseFromString(xmlString, 'application/xml');\n\t\t\t\tconst imported = element.ownerDocument.importNode(doc.documentElement, true);\n\t\t\t\tArray.from(imported.childNodes).forEach((child) => {\n\t\t\t\t\tif (child.nodeType !== Node.ELEMENT_NODE) return;\n\t\t\t\t\telement.appendChild(child);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* IE11 does not support innerHTML on SVGs. Check browser support.\n\t\t*/\n\t\t_browserSupportsSvgInnerHTML() {\n\n\t\t\tconst svg = document.createElementNS(this._svgNS, 'svg');\n\t\t\tsvg.innerHTML = '<g></g>';\n\t\t\treturn svg.querySelectorAll('g').length === 1;\n\n\t\t}\n\n\n\t}\n\n\n\n\n\n\t/**\n\t* Draws a matrix with resistencies. \n\t* Rows: Antibiotics\n\t* Cols: Bacteria\n\t* Cells: Colored according to resistance, with label\n\t*\n\t* Data should be an array containing rowData. rowData is an object with a property for the row's label\n\t* and a property wich contains an array with the cell's data:\n\t*\n\t* [\n\t*\t// One object per row\n\t*\t{\n\t*\n\t*\t\t// Row label's data\n\t*\t\tbacterium : { name: 'bact-name', id: 1 }\n\t*\n\t*\t\t// Cells display antibiotics\n\t*\t\t, antibiotics : [\n\t*\t\t\t{\n\t*\t\t\t\tantibiotic: { name: 'abname', id: 15}\n\t*\t\t\t\t, resistance: 0.5\n\t*\t\t\t}\n\t*\t\t]\n\t*\t}\n\t* ]\n\t*\n\t*/\n\tclass ResistanceMatrix {\n\n\n\n\t\t/**\n\t\t* @param {HTMLElement} container\n\t\t* @param {Array} data\t\t\t\tData to be displayed must be a 2-d array where the values of the 2nd dimension array\n\t\t*\t\t\t\t\t\t\t\t\tare objects, e.g. [[{bacterium: {name: 'bact-0'}, antibiotic: {name: 'ab-0'}, resistance: 0.5}]]\n\t\t* @param {Object} config\t\t\tContains the config with the following properties: \n\t\t*\t\t\t\t\t\t\t\t\t- cellColorValue: Function that returns the cell's color value (from the cell's object)\n\t\t* \t\t\t\t\t\t\t\t\t- cellLabelValue: Function that returns the cell label's value (from the cell's object)\n\t\t*\t\t\t\t\t\t\t\t\t- columnHeaderTransformer: transformation-function that takes the whole data and returns array relevant for\n\t\t*\t\t\t\t\t\t\t\t\t  column headers\n\t\t*\t\t\t\t\t\t\t\t\t- columnIdentifier: Function that returns id for the col header (from columnHeaderTransformer)\n\t\t*\t\t\t\t\t\t\t\t\t- columnLabelValue: Function that returns the column label's value (from the columnHeaderTransformer array)\n\t\t*\t\t\t\t\t\t\t\t\t- rowLabelValue: Function that returns the row label's value (from the cell's array)\n\t\t* \t\t\t\t\t\t\t\t\t- spaceBetweenLabelsAndMatrix: Space between label and matrix in px\n\t\t*\t\t\t\t\t\t\t\t\t- paddingRatio: Line weight (in % of the cells)\n\t\t*/\n\t\tconstructor(container, data, config = {}) {\n\n\t\t\tif (!container) {\n\t\t\t\tthrow new Error('ResistanceMatrix: Container must be passed to constructor.');\n\t\t\t}\n\n\t\t\tif (!data) {\n\t\t\t\tthrow new Error('ResistanceMatrix: Data needed in constructor');\n\t\t\t}\n\n\t\t\tthis._container \t= container;\n\t\t\tthis._data \t\t\t= data;\n\t\t\tthis._svgNS\t\t\t= 'http://www.w3.org/2000/svg';\n\n\t\t\tthis._svgHelper\t\t= new SVGHelper();\n\n\t\t\tthis._configuration\t= {\n\t\t\t\tspaceBetweenLabelsAndMatrix\t\t: config.spaceBetweenLabelsAndMatrix || 20\n\t\t\t\t, transitionDuration\t\t\t: config.transitionDuration || 900\n\t\t\t\t, lineWidth\t\t\t\t\t\t: config.lineWidth || 2\n\t\t\t\t, cellColorValue\t\t\t\t: config.cellColorValue || (() => 1)\n\t\t\t\t, cellLabelValue\t\t\t\t: config.cellLabelValue || (() => '–')\n\t\t\t\t, rowIdentifier\t\t\t\t\t: config.rowIdentifier || 'n/a'\n\t\t\t\t, rowLabelValue\t\t\t\t\t: config.rowLabelValue || (() => 'n/a')\n\t\t\t\t, columnLabelValue\t\t\t\t: config.columnLabelValue || (() => 'n/a')\n\t\t\t\t, columnHeaderTransformer\t\t: config.columnHeaderTransformer || ((item) => item)\n\t\t\t\t, columnIdentifier\t\t\t\t: config.columnIdentifier || ((item) => item)\n\t\t\t\t// Returns value for rows on each data item\n\t\t\t\t, rowDataTransformer\t\t\t: config.rowDataTransformer || ((item) => item)\n\t\t\t\t, rowHidden\t\t\t\t\t\t: config.rowHidden ||(() => false)\n\t\t\t\t, columnHidden\t\t\t\t\t: config.columnHidden || (() =>false)\n\t\t\t};\n\n\n\t\t\t// Create SVG\n\t\t\tthis._elements = {};\n\t\t\tconsole.time('drawMatrix');\n\t\t\tthis._drawMatrix();\n\t\t\tconsole.timeEnd('drawMatrix');\n\n\t\t}\n\n\n\n\n\n\t\t/**\n\t\t* Updates the matrix' data\n\t\t* @param {Array} data\t\t\t\tArray (rows) of Arrays (cols) which hold the values (Object)\n\t\t*/\n\t\tupdateData(data) {\n\n\t\t\tconsole.time('updateData');\n\n\t\t\tthis._data = data;\n\t\t\tconsole.log('ResistanceMatrix: Update data to %o', data);\n\n\n\t\t\t// Cols\n\t\t\tconst visibleCols = this._configuration.columnHeaderTransformer(this._data).filter((item) => !this._configuration.columnHidden(item));\n\t\t\tconsole.log('ResistanceMatrix: Visible cols', visibleCols.length);\n\n\t\t\tconst colScale = this._createScale(\n\t\t\t\t  visibleCols\n\t\t\t\t, this._configuration.columnIdentifier\n\t\t\t\t, this._colScale.offset()\n\t\t\t\t, this._defaultStep * visibleCols.length\n\t\t\t\t, this._configuration.lineWidth\n\t\t\t);\n\n\t\t\tthis._updateColumnPositionAndVisibility(colScale);\n\n\n\n\t\t\t// Rows\n\t\t\tconst visibleRows = this._data.filter((item) => !this._configuration.rowHidden(item));\n\t\t\tconsole.log('ResistanceMatrix: Visible rows %o', visibleRows.length);\n\t\t\tconst rowScale = this._createScale(\n\t\t\t\tvisibleRows\n\t\t\t\t, this._configuration.rowIdentifier\n\t\t\t\t, 0\n\t\t\t\t, this._defaultStep * visibleRows.length\n\t\t\t\t, this._configuration.lineWidth\n\t\t\t);\n\n\t\t\tthis._updateRowPositionsAndVisibility(rowScale);\n\n\n\n\t\t\t// Update scales\n\t\t\tthis._colScale = colScale;\n\t\t\tthis._rowScale = rowScale;\n\n\t\t\tconsole.timeEnd('updateData');\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Sets visibility class on element and updates its position (through transform)\n\t\t*/\n\t\t_updatePositionAndVisibility(element, xPos, yPos, visible) {\n\n\t\t\tconst classes = ['visible', 'hidden']\n\t\t\t\t, classIndex = visible ? 0 : 1;\n\n\t\t\telement.classList.remove(classes[Math.abs(classIndex - 1)]);\n\t\t\telement.classList.add(classes[classIndex]);\n\n\t\t\tthis._svgHelper.setTransformation(element, {x: xPos, y: yPos});\n\n\t\t}\n\n\n\n\n\t\t/**\n\t\t* Updates the row's position and visibility to match filters\n\t\t*/\n\t\t_updateRowPositionsAndVisibility(scale) {\n\n\t\t\tconsole.time('updateRowPos');\n\n\t\t\tconst rowIds = Object.keys(this._elements.rows);\n\t\t\trowIds.forEach((rowId) => {\n\n\t\t\t\tconst pos = scale.getPosition(rowId)\n\t\t\t\t\t, row = this._elements.rows[rowId];\n\n\t\t\t\tthis._updatePositionAndVisibility(row, 0, pos, pos !== undefined);\n\n\t\t\t});\n\n\t\t\tconsole.timeEnd('updateRowPos');\n\n\t\t}\n\n\n\n\n\n\n\t\t/**\n\t\t* Updates the col's position and visibility to match filters\n\t\t*/\n\t\t_updateColumnPositionAndVisibility(scale) {\n\n\t\t\tconsole.time('updateColPos');\n\n\t\t\t// Remove all columns that are not visible any more\n\t\t\tconst colIds = Object.keys(this._elements.columns);\n\t\t\tcolIds.forEach((colId) => {\n\n\t\t\t\tconst pos = scale.getPosition(colId);\n\n\t\t\t\tthis._elements.columns[colId].forEach((element) => {\n\t\t\t\t\tthis._updatePositionAndVisibility(element, pos, 0, pos !== undefined);\n\t\t\t\t});\n\n\n\t\t\t});\n\n\t\t\tconsole.timeEnd('updateColPos');\n\n\t\t}\n\n\n\n\n\n\n\t\t/**\n\t\t* Main method. Draws the matrix with data and container provided.\n\t\t*/\n\t\t_drawMatrix() {\n\n\n\t\t\t// Create new SVG\n\t\t\tif (!this._elements.svg) {\n\t\t\t\tthis._elements.svg = this._createSVG();\n\t\t\t\tthis._container.appendChild(this._elements.svg);\n\t\t\t}\n\t\t\t// Empty existing SVG\n\t\t\telse {\n\t\t\t\tthis._elements.svg.innerHTML = '';\n\t\t\t}\n\n\t\t\tconst rowLabelMaxWidth\t\t\t= this._getRowLabelMaxWidth();\n\n\n\n\t\t\t// Create scale for columns\n\t\t\tconst left = rowLabelMaxWidth + this._configuration.spaceBetweenLabelsAndMatrix;\n\t\t\t// 50: Save same space for the labels that are rotate by 45deg\n\t\t\tthis._colScale = this._createScale(this._configuration.columnHeaderTransformer(this._data), this._configuration.columnIdentifier, left, this._getSvgWidth() - left - 50, this._configuration.lineWidth);\n\n\t\t\t// Store a «normal» step: \n\t\t\t// When all elements are removed (because filters are too strict), step() will be lost and canot be\n\t\t\t// used any more. But they're required in _updateData to create new scales.\n\t\t\tthis._defaultStep = this._colScale.step();\n\t\t\t\n\t\t\t// Make sure that the row's scale's steps are the same as the col scale's by multiplying data's length with the steps of colScale\n\t\t\t// firstColData contains the first entry of every row\n\t\t\tthis._rowScale = this._createScale(this._data, this._configuration.rowIdentifier, 0, this._data.length * this._colScale.step(), this._configuration.lineWidth);\n\n\t\t\tconsole.log('ResistanceMatrix: SVG width %o, row label max width %o', this._getSvgWidth(), rowLabelMaxWidth);\n\n\n\n\t\t\t// Create all content needed to draw the table\n\t\t\tconst content = [];\n\n\n\n\t\t\t// Create circle <defs>\n\t\t\tconsole.time('createCircleDefs');\n\t\t\tcontent.push(this._createCellCircleDefs(this._colScale.bandwidth()));\n\t\t\tconsole.timeEnd('createCircleDefs');\n\n\n\t\n\t\t\t// Create Column heads\t\t\t\n\t\t\tconsole.time('createColHeads');\n\t\t\tcontent.push(this._createColHeads(\n\t\t\t\tthis._configuration.columnHeaderTransformer(this._data)\n\t\t\t\t, this._configuration.columnLabelValue\n\t\t\t\t, this._configuration.columnIdentifier\n\t\t\t\t, this._colScale\n\t\t\t));\n\t\t\tconsole.timeEnd('createColHeads');\n\n\n\n\t\t\t// Create rows\n\t\t\tconsole.time('createRows');\n\t\t\tcontent.push('<g class=\\'matrix-body\\'>');\n\t\t\tcontent.push(this._createRows(\n\t\t\t\t  this._data\n\t\t\t\t, this._configuration.rowDataTransformer\n\t\t\t\t, this._configuration.rowLabelValue\n\t\t\t\t, this._configuration.rowIdentifier\n\t\t\t\t, this._configuration.columnIdentifier\n\t\t\t\t, this._configuration.cellColorValue\n\t\t\t\t, this._configuration.cellLabelValue\n\t\t\t\t, this._colScale\n\t\t\t\t, this._rowScale\n\t\t\t\t, this._configuration.spaceBetweenLabelsAndMatrix\n\t\t\t));\n\t\t\tcontent.push('</g>');\n\t\t\tconsole.timeEnd('createRows');\n\n\t\n\n\n\t\t\tconsole.time('addToSVG');\n\t\t\tthis._svgHelper.setSVGContent(this._elements.svg, content.join(''));\n\t\t\tconsole.timeEnd('addToSVG');\n\n\n\n\n\t\t\t// Transform column heads (height of them must be known before we can transform them)\n\t\t\tconsole.time('transformColHeads');\n\t\t\tconsole.time('transformColHeadsGetHeight');\n\t\t\tconst colHeads = document.querySelectorAll('.column-head');\n\t\t\tlet maxLabelHeight = 0;\n\t\t\tArray.from(colHeads).forEach((head) => {\n\t\t\t\tmaxLabelHeight = Math.max(maxLabelHeight, head.getBoundingClientRect().width);\n\t\t\t});\n\t\t\tconsole.log('ResistanceMatrix: Max col head width is %o', maxLabelHeight);\n\t\t\tconsole.timeEnd('transformColHeadsGetHeight');\n\n\t\t\tconsole.time('transformColHeadsSetPos');\n\n\t\t\t// Stupid f...(ill in the blanks) IE11 does not know CSS transforms – needs attribute instead, see\n\t\t\t// http://stackoverflow.com/questions/23047098/css-translate-not-working-in-ie11-on-svg-g\n\t\t\tthis._svgHelper.setTransformation(this._elements.svg.querySelector('.column-heads'), { x: 0, y: Math.ceil(maxLabelHeight) });\n\t\t\tconsole.timeEnd('transformColHeadsSetPos');\n\t\t\tconsole.timeEnd('transformColHeads');\n\n\t\t\t// Transform matrix body (move down by height of col labels)\n\t\t\tconsole.time('transformBody');\n\t\t\tthis._svgHelper.setTransformation(this._elements.svg.querySelector('.matrix-body'), { x: 0, y: Math.ceil(maxLabelHeight + this._configuration.spaceBetweenLabelsAndMatrix) });\n\t\t\tconsole.timeEnd('transformBody');\n\n\n\n\n\t\t\t// Set height of svg\n\t\t\tconsole.time('svgHeight');\n\t\t\tconst height  = maxLabelHeight + this._configuration.spaceBetweenLabelsAndMatrix + this._rowScale.step() * this._data.length;\n\t\t\tthis._elements.svg.style.height = height + 'px';\n\t\t\tconsole.timeEnd('svgHeight');\n\n\n\n\n\t\t\t// Cache cols and rows for faster animations (only read from DOM once)\n\t\t\tconsole.time('storeDomElements');\n\n\t\t\t// Objects with key: identifier and value: DOM element resp. [DOM element] for columns (as every column is made up\n\t\t\t// of different cells)\n\t\t\tthis._elements.rows = {};\n\t\t\tthis._elements.columns = {};\n\n\t\t\tconst rows = this._elements.svg.querySelectorAll('.matrix-row');\n\t\t\tArray.from(rows).forEach((row) => {\n\t\t\t\tthis._elements.rows[row.getAttribute('data-identifier')] = row;\n\t\t\t});\n\n\t\t\t// Cols: Use all cells and column heads\n\t\t\tconst cells = this._elements.svg.querySelectorAll('.matrix-cell, .column-head');\n\t\t\tArray.from(cells).forEach((cell) => {\n\t\t\t\tconst identifier = cell.getAttribute('data-column-identifier');\n\t\t\t\tif (!this._elements.columns[identifier]) {\n\t\t\t\t\tthis._elements.columns[identifier] = [cell];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._elements.columns[identifier].push(cell);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.timeEnd('storeDomElements');\n\t\t\tconsole.log('ResistanceMatrix: Rows are %o, cols %o', this._elements.rows, this._elements.columns);\n\n\n\n\n\n\t\t\t// Hovering\n\t\t\tconst body = this._elements.svg.querySelector('.matrix-body');\n\t\t\tthis._elements.hoveredMatrixCell = undefined;\n\t\t\tthis._elements.mouseOver = this._createEmptyMouseOverCell(this._colScale.bandwidth());\n\t\t\tbody.appendChild(this._elements.mouseOver);\n\n\t\t\t// Event handler (mouseover). Don't attach an mouseenter listener to every single cell, \n\t\t\t// but use a global listener to improve performance\n\t\t\tbody.addEventListener('mouseover', (ev) => this._mouseOverHandler(ev));\n\t\t\tbody.addEventListener('mouseleave', (ev) => this._mouseOutHandler(ev));\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Handler for mouseleave\n\t\t*/\n\t\t_mouseOutHandler() {\n\n\t\t\tthis._elements.mouseOver.style.opacity = 0;\n\t\t\tthis._elements.hoveredMatrixCell = undefined;\n\n\t\t\tthis._degradeHighlightedHeaders();\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Removes the .active class from the currently hovered colum and row\n\t\t*/\n\t\t_degradeHighlightedHeaders() {\n\n\t\t\tconst rowHead = this._elements.hoveredRowHead;\n\t\t\tconst colHead = this._elements.hoveredColumnHead;\n\n\t\t\twindow.requestAnimationFrame(() => {\n\t\t\t\tif (rowHead) rowHead.classList.remove('active');\n\t\t\t\tif (colHead) colHead.classList.remove('active');\n\t\t\t});\n\n\t\t}\n\n\n\t\t/**\n\t\t* Handler for mouse over cell\n\t\t*/\n\t\t_mouseOverHandler(ev) {\n\n\t\t\t// Get hovered cell (class .matrix-cell)\n\t\t\tlet target = ev.target;\n\n\t\t\twhile (target.parentNode) {\n\t\t\t\t// Prevent errors by continuing on missing classList (IE11)\n\t\t\t\tif (!target.classList) continue;\n\t\t\t\t// This is what we want: Get .matrix-cell\n\t\t\t\tif (target.classList.contains('matrix-cell')) break;\n\t\t\t\t// Go up\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\n\t\t\t// Undefined (target was document)\n\t\t\tif (!target || target === document) return;\n\n\t\t\t// Hovered cell did not change\n\t\t\tif (this._elements.hoveredMatrixCell === target) return;\n\n\t\t\t// Update _hoveredMatrixCell\n\t\t\tthis._elements.hoveredMatrixCell = target;\n\n\t\t\tconsole.error(target);\n\t\t\tthis._updateMouseOverCell(target);\n\n\t\t\tthis._degradeHighlightedHeaders();\n\t\t\tthis._highlightHeaders(target);\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Highlights headers of currently hovered row/col\n\t\t*/\n\t\t_highlightHeaders(hoveredCell) {\n\n\t\t\tconst rowHead = hoveredCell.parentNode.querySelector('.row-label');\n\t\t\tthis._elements.hoveredRowHead = rowHead;\n\n\t\t\tconst colId = hoveredCell.getAttribute('data-column-identifier');\n\t\t\tconst colHead = this._elements.svg.querySelector(`.column-head[data-column-identifier=${ colId }]`);\n\t\t\tthis._elements.hoveredColumnHead = colHead;\n\n\t\t\twindow.requestAnimationFrame(() => {\n\t\t\t\trowHead.classList.add('active');\n\t\t\t\tcolHead.classList.add('active');\n\t\t\t});\n\n\t\t}\n\n\n\n\n\n\t\t_updateMouseOverCell(hoveredCell) {\n\n\t\t\tconst rowIdentifier = hoveredCell.getAttribute('data-row-identifier');\n\t\t\tconst colIdentifier = hoveredCell.getAttribute('data-column-identifier');\n\t\t\t//console.log('ResistanceMatrix: Create mouse over cell for %o, col %o row %o', hoveredCell, colIdentifier, rowIdentifier);\n\t\t\tconst mouseOver = this._elements.mouseOver;\n\t\t\tthis._svgHelper.setTransformation(mouseOver, { x: this._colScale.getPosition(colIdentifier), y: this._rowScale.getPosition(rowIdentifier) });\n\t\t\tmouseOver.style.opacity = 1;\n\t\t\tmouseOver.querySelector('text').textContent = hoveredCell.querySelector('text').textContent;\n\t\t\tmouseOver.querySelector('circle').setAttribute('fill', hoveredCell.querySelector('use').getAttribute('fill'));\n\n\t\t}\n\n\n\t\t/**\n\t\t* Creates and returns the mouse over (focused) cell as a <g>. Must be a DOM element in \n\t\t* order to be appendable to SVG.\n\t\t*/\n\t\t_createEmptyMouseOverCell(cellDimensions) {\n\n\t\t\tconst radius = Math.round(cellDimensions / 2 + 25);\n\n\t\t\tconst g = document.createElementNS(this._svgNS, 'g');\n\t\t\tg.classList.add('mouse-over-cell');\n\t\t\tg.style.pointerEvents = 'none';\n\t\t\tg.style.opacity = 0;\n\t\t\tg.setAttribute('x', 0);\n\t\t\tg.setAttribute('y', 0);\n\t\t\tg.style.cursor = 'pointer';\n\n\t\t\t// dy = -1em aligns text at top; -1.5 centers top\n\t\t\tconst content = `\n\t\t\t\t<circle style='cursor:pointer' r='${ radius }'></circle>\n\t\t\t\t<text  style='cursor:pointer' text-anchor='middle' alignment-baseline='central' x='0' y='0'></text>\n\t\t\t`;\n\n\t\t\tthis._svgHelper.setSVGContent(g, content);\n\t\t\treturn g;\n\n\t\t}\n\n\n\n\n\t\t/**\n\t\t* Returns (rounded) width of \n\t\t*/\n\t\t_getRowLabelMaxWidth() {\n\n\t\t\tconsole.time('getRowLabelMaxWidth');\n\n\t\t\t// Create rows with labels\n\t\t\tconst rows = [];\n\t\t\t// Fake row scale as we don't just care at this moment\n\t\t\tconst rowScale = this._createScale(this._data, (item) => item, 0, 0, 0);\n\t\t\tthis._data.forEach((row) => {\n\t\t\t\trows.push(this._createRow(this._createRowLabel(this._configuration.rowLabelValue(row), rowScale, 0), this._configuration.rowIdentifier(row), rowScale));\n\t\t\t});\n\n\t\t\t// Append labels to <g>, then to SVG\n\t\t\tconst g = document.createElementNS(this._svgNS, 'g');\n\t\t\tthis._svgHelper.setSVGContent(g, rows.join(''));\n\t\t\tthis._elements.svg.appendChild(g);\n\n\t\t\t// Go through labels\n\t\t\tlet maxWidth = g.getBoundingClientRect().width;\n\n\t\t\t// Re-set to previous state (remove g)\n\t\t\tthis._elements.svg.removeChild(g);\n\n\t\t\tconsole.timeEnd('getRowLabelMaxWidth');\n\n\t\t\treturn Math.ceil(maxWidth);\n\n\t\t}\n\n\n\n\n\t\t/**\n\t\t* Creates and returns a scale  which takes an identifier of a column and returns the corresponding position on the \n\t\t* x axis. Needed to simplify things as some cells may be missing.\n\t\t*/\n\t\t_createScale(values, identifierFunction, offset, width, lineWidth) {\n\n\t\t\tconsole.log('ResistanceMatrix: Create scale for values %o, starts at %o, ends at %o, line width %o', values, offset, width, lineWidth);\n\t\t\t// Holds position for item (key is item, value is position)\n\t\t\tconst positions = {};\n\t\t\t// Step: Space between one col and the next\n\t\t\tconst step = Math.floor((width)/values.length);\n\t\t\tconst bandwidth = step - lineWidth;\n\t\t\tvalues.forEach((item, index) => {\n\t\t\t\tpositions[identifierFunction(item)] = index * step + offset;\n\t\t\t});\n\t\t\tconsole.log('ResistanceMatrix: Created scale for %o', positions);\n\t\t\treturn {\n\t\t\t\tgetPosition\t\t: (item) => positions[item]\n\t\t\t\t, bandwidth\t\t: () => bandwidth\n\t\t\t\t, lineWidth\t\t: () => lineWidth\n\t\t\t\t, step\t\t\t: () => step\n\t\t\t\t, offset\t\t: () => offset\n\t\t\t};\n\n\t\t}\n\n\n\t\t/**\n\t\t* Creates a single row label\n\t\t*/\n\t\t_createRowLabel(value, scale, indentation) {\n\n\t\t\treturn `<text class='row-label' text-anchor='end' y='${ scale.bandwidth() / 2 }' dy='-0.7em' x='${ indentation }'>\n\t\t\t\t\t${ value }\n\t\t\t\t</text>`;\n\n\t\t}\n\n\n\t\t/**\n\t\t* Creates a single row with content and identifier given. Needed to \n\t\t* a) measure the row label's width\n\t\t* b) draw the final matrix\n\t\t*/\n\t\t_createRow(content, identifier, rowScale) {\n\n\t\t\tconst transformation = this._svgHelper.setTransformation(null, { x: 0, y: rowScale.getPosition(identifier) });\n\n\t\t\treturn `\n\t\t\t\t<g class='matrix-row visible' data-identifier='${ identifier }' transform='${ transformation.attribute }' style='${ transformation.style }'>\n\t\t\t\t\t${ content }\n\t\t\t\t</g>`.replace(/[\\n\\r]/g, '');\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Creates all rows\n\t\t*/\n\t\t_createRows(data, transformer, valueFunction, rowIdentifierFunction, columnIdentifier, colorValue, labelValue,  colScale, rowScale, spaceBetweenLabelsAndMatrix) {\n\t\t\t\n\t\t\tconsole.log('ResistanceMatrix: Draw rows with data %o, transformer %o, value %o, identifier %o, scale %o', data, transformer, valueFunction, rowIdentifierFunction, colScale);\t\n\n\t\t\tconst rows = [];\n\t\t\tdata.forEach((rowData) => {\n\t\t\t\tconst label = this._createRowLabel(valueFunction(rowData), rowScale, colScale.offset() - spaceBetweenLabelsAndMatrix);\n\t\t\t\tconst cells = this._createCellsForRow(transformer(rowData), columnIdentifier, rowIdentifierFunction(rowData), colorValue, labelValue, colScale);\n\t\t\t\trows.push(this._createRow(label + cells, rowIdentifierFunction(rowData), rowScale));\n\t\t\t});\n\t\t\treturn rows.join('');\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Creates a set of cells for a certain row\n\t\t*/\n\t\t_createCellsForRow(data, columnIdentifierFunction, rowIdentifier, colorValue, labelValue, scale) {\n\t\t\tconst cells = [];\n\t\t\tdata.forEach((cellDatum) => {\n\n\t\t\t\t// Empty label: Don't draw\n\t\t\t\tif (labelValue(cellDatum) === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst transformation = this._svgHelper.setTransformation(null, {x: scale.getPosition(columnIdentifierFunction(cellDatum)), y: 0});\n\n\t\t\t\t// y position: Go down by half of the circle's size, then up by half the font's size – should be \n\t\t\t\t// vertically aligned in the middle\n\t\t\t\tcells.push(`\n\t\t\t\t\t<g class='matrix-cell' transform='${ transformation.attribute }' data-column-identifier='${ columnIdentifierFunction(cellDatum) }' data-row-identifier='${ rowIdentifier }' style='${transformation.style}'>\n\t\t\t\t\t\t<use xlink:href='#cell-circle-def' fill='${ colorValue(cellDatum) }'></use>\n\t\t\t\t\t\t<text text-anchor='middle' x='0' y='0' alignment-baseline='central'>${ labelValue(cellDatum) }</text>\n\t\t\t\t\t</g>\n\t\t\t\t`);\n\t\t\t});\n\t\t\treturn cells.join('');\n\t\t}\n\n\n\n\t\t/**\n\t\t* Creates all column heads including the wrapping <g>\n\t\t*/\n\t\t_createColHeads(data, textFunction, identifierFunction, scale) {\n\t\t\tconsole.log('ResistanceMatrix: Create col heads with data %o, text %o, identifier %o, space %o', data, textFunction, identifierFunction, scale);\n\t\t\tconst heads = [];\n\t\t\theads.push(`<g class='column-heads'>`);\n\t\t\tdata.forEach((head) => {\n\t\t\t\theads.push(this._createColHead(textFunction(head), identifierFunction(head), scale.getPosition(identifierFunction(head))));\n\t\t\t});\n\t\t\theads.push('</g>');\n\t\t\treturn heads.join('');\n\t\t}\n\n\n\n\t\t/**\n\t\t* Creates a single column head\n\t\t*/\n\t\t_createColHead(value, identifier, left) {\n\n\t\t\tconst transformation = this._svgHelper.setTransformation(null, { x: left, y: 0 })\n\t\t\t\t, rotation = this._svgHelper.setTransformation(null, null, -45);\n\n\t\t\treturn `\n\t\t\t\t<g class='column-head' data-column-identifier='${ identifier }' transform='${ transformation.attribute }' style='${ transformation.style }'>\n\t\t\t\t\t<text transform='${ rotation.attribute }' style='${ rotation.style }'>${ value }</text>\n\t\t\t\t</g>\n\t\t\t`;\n\t\t}\n\n\n\n\t\t/**\n\t\t* Creates the definitions for the circles in a cell. \n\t\t*/\n\t\t_createCellCircleDefs(dimensions) {\n\n\t\t\tconst roundedRadius = Math.floor(dimensions / 2);\n\n\t\t\treturn `\n\t\t\t\t<defs>\n\t\t\t\t\t<circle id='cell-circle-def' r='${ roundedRadius }' fill='inherit' stroke-width='inherit' stroke='inherit'></circle>\n\t\t\t\t</defs>\n\t\t\t`;\n\n\t\t}\n\n\n\n\t\t/**\n\t\t* Returns the SVG's width \n\t\t* @return {Number}\n\t\t*/\n\t\t_getSvgWidth() {\n\t\t\treturn this._elements.svg.getBoundingClientRect().width;\n\t\t}\n\n\n\n\t\t/**\n\t\t* Creates and returns the SVG\n\t\t*/\n\t\t_createSVG() {\n\n\t\t\tconst svg = document.createElementNS(this._svgNS, 'svg');\n\t\t\treturn svg;\n\n\t\t}\n\n\n\t}\n\n\twindow.infect = window.infect || {};\n\twindow.infect.ResistanceMatrix = ResistanceMatrix;\n\n})();\n\n"]}